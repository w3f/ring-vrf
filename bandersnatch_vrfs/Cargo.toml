[package]
name = "bandersnatch_vrfs"
description = "Ring VRFs and thin VRF on bandersnatch"
authors = ["Jeff Burdges <jeff@web3.foundation>"]
version = "0.0.2"
repository = "https://github.com/w3f/ring-vrf/tree/master/bandersnatch_vrfs"
edition = "2021"
license = "MIT/Apache-2.0"
keywords = ["crypto", "cryptography", "vrf", "signature", "privacy"]

[dependencies]
dleq_vrf = { version = "0.0.2", default-features = false, path = "../dleq_vrf", features = [ "scale" ] }

rand_core.workspace = true
zeroize.workspace = true

ark-std.workspace = true
ark-ff.workspace = true
ark-ec.workspace = true
ark-serialize.workspace = true

fflonk = { git = "https://github.com/w3f/fflonk" }
ring = { git = "https://github.com/w3f/ring-proof", rev="8657210" }

merlin = { version = "3.0", default-features = false }

# In these three, add optional = true here only if we create some related curves trait.
ark-ed-on-bls12-381-bandersnatch = { version = "0.4", default-features = false }
ark-bls12-381 = { version = "0.4", default-features = false, features = [ "curve" ] } # implies scalar_field
sha2 = { version = "0.10", default-features = false }
rand_chacha = { version = "0.3.1", default-features = false }

[dev-dependencies]


[features]
default = ["getrandom"]  #  "std",
getrandom = ["dleq_vrf/getrandom"]
std = ["getrandom", "ring/std", "ark-std/std", "ark-ff/std", "ark-ec/std", "ark-serialize/std"]
# parallel = ["std", "ring/parallel"]  #  ["std", "rayon", "ark-std/parallel", "ark-ff/parallel", "ark-ec/parallel", "ark-poly/parallel"]
print-trace = ["ark-std/print-trace"]
